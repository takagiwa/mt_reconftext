FPGA について
===============

FPGA はディジタル信号を取り扱う IC、LSI の一種です。

ターゲットの回路が決まっており、予算が十分にあれば、専用の IC 、LSI を製造するのが、デバイス単価、動作周波数、消費電力のいずれも有利です。

それに対し FPGA は内部に組み込む回路を書き換えられることが利点となっています。

「試作・実験」「少量多品種」に向いたデバイスです。



使用例:

液晶テレビ
 FPGA の単価は一般に同じ規模の LSI より高いため、家電製品に FPGA が使われることはありませんが、ある液晶テレビでは一時 FPGA が使われました。
 理由は明らかではありませんが、恐らく LSI の設計、製造が間に合わないか、組み込む回路に変更が入る恐れがあったものと考えられます。
 LSI は設計や製造に時間がかかり、また内部の回路変更には作り直しが必要ですが、FPGA では直ぐに回路を組み込むことができ、データを入れ替えるだけで変更も可能です。

携帯電話と基地局の試作機
 携帯電話や基地局は世界的な規格に則って作られますが、規格が固まってから作っていると発売が遅くなってしまいます。
 規格が固まる前にシステムを作ってしまい、規格変更に合わせてあとから回路が変更できるよう、FPGA が大量に使われます。
 規格や回路が固まったら、必要に応じて LSI に移行します。

株・為替自動取引
 コンピュータによる高頻度取引では１秒以下の周期で株価、為替の情報を監視し、自身に有利なタイミングで売買を行います。
 ソフトウェアだけでの処理は遅いと考えられており、FPGA による処理が併用されます。
 処理のアルゴリズムは使用者毎に異なるため、LSI 化はできず、FPGA が使用されます。



.. note::

 実際にこの授業で使用するデバイスは「PLD」と呼ばれます。PLD は Programmable Logic Device の略です。プログラム可能な論理デバイス、となります。

 対して FPGA は Field Programmable Gate Array の略です。現場 (Field) でプログラム可能なゲート (論理) の集合、となります。

 できることはほぼ同じですが、以下のような特徴で分けています。

 CPLD

 - フラッシュメモリを内蔵し、電源を入れるとすぐ使える。
 - 回路規模は小さめ。
 - 基本的に論理回路しか入ってない。
 - 動作速度が比較的高い。
 - 構造上、XOR が少し苦手。

 FPGA

 - 動作のプログラムは揮発性のメモリに格納されるので、電源を切ると内容が失われる。そのため別途フラッシュメモリが必要。
 - 回路規模はかなり大きい。
 - 高機能 (乗算用ハードウェアが入っていたり、メモリが入っていたりする) 。
 - 動作速度は今ではだいぶ高くなってきた。

 いずれも D フリップフロップと組み合わせ回路がセットになっており、その入力をプログラムするような形です。このセットがデバイスの中に多数組み込まれ、相互に接続できるよう配線とスイッチも同様に多数用意されます。

 CPLD と FPGA の間の大きな違いは組み合わせ回路の構成です。CPLD は大量の AND と多入力 OR を組み合わせていますが (実際には NOT も入ります) 、FPGA は AND 、OR に縛られない LUT (LookUp Table) を使用します。たとえば４入力の AND 、４入力の OR に限らず、\\"4\\" 等の任意の数値と一致したときに H を出力する、というようなことも簡単にできるよう、より柔軟な構造になっています。



HDL
---------

ディジタル回路を組み込んだ IC や LSI の開発では、初期には AND 、OR 、NOT 、フリップフロップを CAD 上で回路図のように配置して接続していました。

こういった CAD は、IC 、LSI メーカ毎に異なるため、たとえば完成したデータを違う LSI メーカで製造しなければいけなくなったとき、互換性が無いため入力＆確認し直しが必要になっていました。

こういった状況を避けるために、IC 、LSI の開発も、ソフトウェアのようにテキストで行おうという動きがでてきました。このジャンルの言語は HDL  (Hardware Description Language) と呼ばれます。

ソフトウェアと同様、HDL も様々なものが開発されましたが、現在の主流は VerilogHDL と VHDL です。

VerilogHDL、VHDL は FPGA だけでなく、IC、LSI の開発にも利用されます。


VerilogHDL と VHDL
-----------------------

各言語の特徴を以下に示します (筆者の独断と偏見を含む) 

VerilogHDL

- 民間主導- ツールメーカが開発した。
- 比較的便利な記述ができるようになっている。
- 文法上記述ミスが許容される傾向がある＝ デバッグ時に大変なことが多い。
- 日本でのシェアは、こちらがかすかに多いかもしれない。
- C 言語に近い、と評されることがあるものの、上記のような動きがあることから、むしろ BASIC の方が近いと感じる。
- 無料のシミュレータがあるため、特に趣味の範囲での人気は VHDL より高い模様。
- 後継として SystemVerilog という言語がある。

VHDL

- 米国国防省主導- ソフトウェアのプログラミング言語をベースに策定
- 融通が利かず、あまり高機能でない。コード量は多くなる傾向かもしれない。
- 海外でのシェアは、こちらがかすかに多いかもしれない。
- BASIC ににたキーワードもあるものの、文法エラーの検出の強さは C 言語に近い。


高位合成
-------------

HDL は一般にクロックや信号の衝突などソフトウェアとは異なる考え方が必要になります。それだけ、HDL のプログラマはソフトウェアのプログラマに比べ人口が少ないです。

それでも FPGA に魅力を感じている人々が長年ツールを開発し続け、2014年頃からそれが安価に入手できるようになりました。

Xilinx 社は HLS という名前で、C 言語での FPGA 開発ができるようになっています。

Intel 社 ( Altera 社を買収 )、Xilinx 社 [#f1]_ とも OpenCL 対応のデータ処理向けの開発環境をそろえています。

より高レベル (ハードウェアから遠いという意味で) な言語によるアプローチもあり、これらは高位合成と呼ばれています。

現在は Java 、Python などの言語での FPGA 開発が可能になっています。

ただし FPGA に組み込む回路全てをこれらの言語だけで開発できないパターンもあり、そういった箇所には引き続き VerilogHDL、VHDL が使われます。


アダプティブコンピューティング研究推進体(ACRi)
------------------------------------------------

産学連携でFPGAを活用する高性能なアダプティブコンピューティング・システムの開発、およびその設計を効率化するためのFPGA活用基盤の開発を行う研究推進体（Webサイトより）。

Webサイトは 2020年9月現在、 https://www.acri.c.titech.ac.jp/ 。

上記 Xilinx 社が関わっていることから、体制としては Xilinx 社寄りではあるものの、「ACRiブログ」は FPGA に関する一般的な記事があり、理解の参考になるかと思います。

またネットワーク経由で FPGA 開発ツールやボードにアクセスできる「ACRiルーム」も無料で利用できるため、授業後、趣味でも仕事でも必要があれば試すことができます。

ただしこの授業とは使用するツール、デバイス、ボードが全く異なります。これらの利用方法の解説はまだ充実しているとは言えないため、躓いた時は関係者か私に相談してください。


.. rubric:: Footnotes

.. [#f1] FPGA メーカーは現在はあまり多くなく、Intel 社と Xilinx 社でほぼ寡占、Lattice 社が単独3位のようなポジションで、あとは小規模なメーカーがいくつか。
